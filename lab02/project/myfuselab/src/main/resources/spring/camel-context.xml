<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring       http://camel.apache.org/schema/spring/camel-spring.xsd">
    <!-- Define a traditional camel context here -->
    <bean class="org.apache.camel.component.servlet.CamelHttpTransportServlet" id="camelHttpTransportServlet"/>
    <bean
        class="org.springframework.boot.web.servlet.ServletRegistrationBean" id="servlet">
        <property name="name" value="CamelServlet"/>
        <property name="servlet" ref="camelHttpTransportServlet"/>
        <property name="urlMappings" value="/*"/>
    </bean>
    <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
        <restConfiguration apiContextPath="api-docs" bindingMode="json"
            component="servlet" contextPath="/">
            <apiProperty key="cors" value="true"/>
            <apiProperty key="api.title" value="My First Camel API Lab"/>
            <apiProperty key="api.version" value="1.0.0"/>
        </restConfiguration>
        <rest path="/customers">
            <get uri="/">
                <description>Retrieve all customer data</description>
                <to uri="direct:customers"/>
            </get>
            <get uri="/{id}">
                <description>Retrieve customer by ID</description>
                <to uri="direct:customerById"/>
            </get>
        </rest>
        <route id="customer">
            <from id="_getCustomers" uri="direct:customers"/>
            <to id="_to1" uri="sql:select * from customerdemo?dataSource=dataSource"/>
            <log id="_logCustomer" message="Customer: ${body}"/>
        </route>
        <route id="_customerById">
            <from id="_directCustById" uri="direct:customerById"/>
            <to id="_selectCustById" uri="sql:select * from customerdemo where customerID=:#id?dataSource=dataSource"/>
            <log id="_logCustId" message="Customer: ${body}"/>
        </route>
    </camelContext>
</beans>
